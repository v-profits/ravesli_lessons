//77.3
#include <iostream>

int main()
{
	const int length(9);
	int array[length] = { 7,5,6,4,9,8,2,1,3 };
	for (int i(0); i < length - 1; ++i)
		for (int j(0); j < length - 1; ++j)
			if (array[j] > array[j + 1])
				std::swap(array[j], array[j + 1]);
	for (int k(0); k < length; ++k)
		std::cout << array[k] << " ";
	
	return 0;
}

/*
При неоптимизированной версии сортировки пузырьком выполняются следующие шаги для сортировки массива от наименьшего до наибольшего значения:
   Сравнивается элемент массива под индексом 0 с элементом массива под индексом 1. 
   Если элемент под индексом 0 больше элемента под индексом 1, то значения меняются местами.
   Затем мы перемещаемся к следующей паре значений: элемент под индексом 1 и элемент под индексом 2 и так до тех пор, 
   пока не достигнем конца массива.
   Повторяем шаг №1 и шаг №2 до тех пор, пока весь массив не будет отсортирован.
Напишите программу, которая отсортирует следующий массив сортировкой пузырьком в соответствии с правилами, указанными выше:

const int length(9);
int array[length] = { 7, 5, 6, 4, 9, 8, 2, 1, 3 };

В конце программы выведите отсортированные элементы массива.

Подсказка: Если мы можем отсортировать только один элемент за одну итерацию, то это означает, 
что нам нужно будет повторить выполнение цикла столько раз, сколько есть чисел в нашем массиве (его длина), 
дабы гарантировать выполнение сортировки всего массива.
*/